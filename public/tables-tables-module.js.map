{"version":3,"sources":["webpack:///./node_modules/angular2-uuid/index.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-drop.directive.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-item.class.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-like-object.class.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-select.directive.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-type.class.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-upload.module.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-uploader.class.js","webpack:///./node_modules/ng2-file-upload/index.js","webpack:///./src/app/forms/detailForLatestAndPurchasedPodcast/detailForLatestAndPurchasedPodcast.component.html","webpack:///./src/app/forms/detailForLatestAndPurchasedPodcast/detailForLatestAndPurchasedPodcast.component.ts","webpack:///./src/app/forms/podcastDetailforms/podcastDetailforms.component.html","webpack:///./src/app/forms/podcastDetailforms/podcastDetailforms.component.ts","webpack:///./src/app/tables/latestPodcast/datatable.component.html","webpack:///./src/app/tables/latestPodcast/datatable.component.ts","webpack:///./src/app/tables/purchasedPodcast/purchasedPodcast.component.html","webpack:///./src/app/tables/purchasedPodcast/purchasedPodcast.component.ts","webpack:///./src/app/tables/tables.module.ts","webpack:///./src/app/tables/tables.routing.ts","webpack:///./src/app/tables/userPublishedTable/userPublishedTable.component.html","webpack:///./src/app/tables/userPublishedTable/userPublishedTable.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,iC;;;;;;;;;;;;ACpCa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,iEAAe;AACpC,4BAA4B,mBAAO,CAAC,gGAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4BAA4B;AAClD;AACA;AACA;;;;;;;;;;;;;AC/Ga;AACb,+BAA+B,mBAAO,CAAC,sGAA0B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC7Ha;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC1Ba;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,iEAAe;AACpC,4BAA4B,mBAAO,CAAC,gGAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8BAA8B;AACpD;AACA;AACA;;;;;;;;;;;;;ACxDa;AACblKa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,eAAe,mBAAO,CAAC,uEAAiB;AACxC,aAAa,mBAAO,CAAC,iEAAe;AACpC,4BAA4B,mBAAO,CAAC,gGAAuB;AAC3D,8BAA8B,mBAAO,CAAC,oGAAyB;AAC/D;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACvBa;AACb,aAAa,mBAAO,CAAC,iEAAe;AACpC,+BAA+B,mBAAO,CAAC,sGAA0B;AACjE,wBAAwB,mBAAO,CAAC,wFAAmB;AACnD,wBAAwB,mBAAO,CAAC,wFAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,mBAAmB,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iDAAiD;AACvF;AACA,0CAA0C,6CAA6C;AACvF;AACA;AACA,0CAA0C,6CAA6C;AACvF;AACA;AACA,0CAA0C,6CAA6C;AACvF;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,0BAA0B,EAAE;AACnG;AACA;AACA;AACA,mCAAmC,mCAAmC,EAAE;AACxE;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,yBAAyB,EAAE;AAC7E;AACA;AACA;AACA,qCAAqC,4CAA4C,EAAE;AACnF,2CAA2C,kCAAkC,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gEAAgE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,WAAW;AACvF,uDAAuD,WAAW;AAClE;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yCAAyC,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,4CAA4C,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"tables-tables-module.js","sourcesContent":["\"use strict\";\nvar UUID = (function () {\n    function UUID() {\n        // no-op\n    }\n    UUID.UUID = function () {\n        if (typeof (window) !== \"undefined\" && typeof (window.crypto) !== \"undefined\" && typeof (window.crypto.getRandomValues) !== \"undefined\") {\n            // If we have a cryptographically secure PRNG, use that\n            // http://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\n            var buf = new Uint16Array(8);\n            window.crypto.getRandomValues(buf);\n            return (this.pad4(buf[0]) + this.pad4(buf[1]) + \"-\" + this.pad4(buf[2]) + \"-\" + this.pad4(buf[3]) + \"-\" + this.pad4(buf[4]) + \"-\" + this.pad4(buf[5]) + this.pad4(buf[6]) + this.pad4(buf[7]));\n        }\n        else {\n            // Otherwise, just use Math.random\n            // https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n            // https://stackoverflow.com/questions/11605068/why-does-jshint-argue-against-bitwise-operators-how-should-i-express-this-code\n            return this.random4() + this.random4() + \"-\" + this.random4() + \"-\" + this.random4() + \"-\" +\n                this.random4() + \"-\" + this.random4() + this.random4() + this.random4();\n        }\n    };\n    UUID.pad4 = function (num) {\n        var ret = num.toString(16);\n        while (ret.length < 4) {\n            ret = \"0\" + ret;\n        }\n        return ret;\n    };\n    UUID.random4 = function () {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    };\n    return UUID;\n}());\nexports.UUID = UUID;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require(\"@angular/core\");\nvar file_uploader_class_1 = require(\"./file-uploader.class\");\nvar FileDropDirective = (function () {\n    function FileDropDirective(element) {\n        this.fileOver = new core_1.EventEmitter();\n        this.onFileDrop = new core_1.EventEmitter();\n        this.element = element;\n    }\n    FileDropDirective.prototype.getOptions = function () {\n        return this.uploader.options;\n    };\n    FileDropDirective.prototype.getFilters = function () {\n        return {};\n    };\n    FileDropDirective.prototype.onDrop = function (event) {\n        var transfer = this._getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        var options = this.getOptions();\n        var filters = this.getFilters();\n        this._preventAndStop(event);\n        this.uploader.addToQueue(transfer.files, options, filters);\n        this.fileOver.emit(false);\n        this.onFileDrop.emit(transfer.files);\n    };\n    FileDropDirective.prototype.onDragOver = function (event) {\n        var transfer = this._getTransfer(event);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._preventAndStop(event);\n        this.fileOver.emit(true);\n    };\n    FileDropDirective.prototype.onDragLeave = function (event) {\n        if (this.element) {\n            if (event.currentTarget === this.element[0]) {\n                return;\n            }\n        }\n        this._preventAndStop(event);\n        this.fileOver.emit(false);\n    };\n    FileDropDirective.prototype._getTransfer = function (event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    };\n    FileDropDirective.prototype._preventAndStop = function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n    FileDropDirective.prototype._haveFiles = function (types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        else if (types.contains) {\n            return types.contains('Files');\n        }\n        else {\n            return false;\n        }\n    };\n    return FileDropDirective;\n}());\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", file_uploader_class_1.FileUploader)\n], FileDropDirective.prototype, \"uploader\", void 0);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", core_1.EventEmitter)\n], FileDropDirective.prototype, \"fileOver\", void 0);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", core_1.EventEmitter)\n], FileDropDirective.prototype, \"onFileDrop\", void 0);\n__decorate([\n    core_1.HostListener('drop', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], FileDropDirective.prototype, \"onDrop\", null);\n__decorate([\n    core_1.HostListener('dragover', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], FileDropDirective.prototype, \"onDragOver\", null);\n__decorate([\n    core_1.HostListener('dragleave', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", Object)\n], FileDropDirective.prototype, \"onDragLeave\", null);\nFileDropDirective = __decorate([\n    core_1.Directive({ selector: '[ng2FileDrop]' }),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], FileDropDirective);\nexports.FileDropDirective = FileDropDirective;\n","\"use strict\";\nvar file_like_object_class_1 = require(\"./file-like-object.class\");\nvar FileItem = (function () {\n    function FileItem(uploader, some, options) {\n        this.url = '/';\n        this.headers = [];\n        this.withCredentials = true;\n        this.formData = [];\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.uploader = uploader;\n        this.some = some;\n        this.options = options;\n        this.file = new file_like_object_class_1.FileLikeObject(some);\n        this._file = some;\n        if (uploader.options) {\n            this.method = uploader.options.method || 'POST';\n            this.alias = uploader.options.itemAlias || 'file';\n        }\n        this.url = uploader.options.url;\n    }\n    FileItem.prototype.upload = function () {\n        try {\n            this.uploader.uploadItem(this);\n        }\n        catch (e) {\n            this.uploader._onCompleteItem(this, '', 0, {});\n            this.uploader._onErrorItem(this, '', 0, {});\n        }\n    };\n    FileItem.prototype.cancel = function () {\n        this.uploader.cancelItem(this);\n    };\n    FileItem.prototype.remove = function () {\n        this.uploader.removeFromQueue(this);\n    };\n    FileItem.prototype.onBeforeUpload = function () {\n        return void 0;\n    };\n    FileItem.prototype.onBuildForm = function (form) {\n        return { form: form };\n    };\n    FileItem.prototype.onProgress = function (progress) {\n        return { progress: progress };\n    };\n    FileItem.prototype.onSuccess = function (response, status, headers) {\n        return { response: response, status: status, headers: headers };\n    };\n    FileItem.prototype.onError = function (response, status, headers) {\n        return { response: response, status: status, headers: headers };\n    };\n    FileItem.prototype.onCancel = function (response, status, headers) {\n        return { response: response, status: status, headers: headers };\n    };\n    FileItem.prototype.onComplete = function (response, status, headers) {\n        return { response: response, status: status, headers: headers };\n    };\n    FileItem.prototype._onBeforeUpload = function () {\n        this.isReady = true;\n        this.isUploading = true;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.onBeforeUpload();\n    };\n    FileItem.prototype._onBuildForm = function (form) {\n        this.onBuildForm(form);\n    };\n    FileItem.prototype._onProgress = function (progress) {\n        this.progress = progress;\n        this.onProgress(progress);\n    };\n    FileItem.prototype._onSuccess = function (response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n        this.index = void 0;\n        this.onSuccess(response, status, headers);\n    };\n    FileItem.prototype._onError = function (response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n        this.index = void 0;\n        this.onError(response, status, headers);\n    };\n    FileItem.prototype._onCancel = function (response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.onCancel(response, status, headers);\n    };\n    FileItem.prototype._onComplete = function (response, status, headers) {\n        this.onComplete(response, status, headers);\n        if (this.uploader.options.removeAfterUpload) {\n            this.remove();\n        }\n    };\n    FileItem.prototype._prepareToUploading = function () {\n        this.index = this.index || ++this.uploader._nextIndex;\n        this.isReady = true;\n    };\n    return FileItem;\n}());\nexports.FileItem = FileItem;\n","\"use strict\";\nfunction isElement(node) {\n    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\nvar FileLikeObject = (function () {\n    function FileLikeObject(fileOrInput) {\n        this.rawFile = fileOrInput;\n        var isInput = isElement(fileOrInput);\n        var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n        var postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n        var method = '_createFrom' + postfix;\n        this[method](fakePathOrObject);\n    }\n    FileLikeObject.prototype._createFromFakePath = function (path) {\n        this.lastModifiedDate = void 0;\n        this.size = void 0;\n        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    };\n    FileLikeObject.prototype._createFromObject = function (object) {\n        this.size = object.size;\n        this.type = object.type;\n        this.name = object.name;\n    };\n    return FileLikeObject;\n}());\nexports.FileLikeObject = FileLikeObject;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require(\"@angular/core\");\nvar file_uploader_class_1 = require(\"./file-uploader.class\");\nvar FileSelectDirective = (function () {\n    function FileSelectDirective(element) {\n        this.onFileSelected = new core_1.EventEmitter();\n        this.element = element;\n    }\n    FileSelectDirective.prototype.getOptions = function () {\n        return this.uploader.options;\n    };\n    FileSelectDirective.prototype.getFilters = function () {\n        return {};\n    };\n    FileSelectDirective.prototype.isEmptyAfterSelection = function () {\n        return true;//!!this.element.nativeElement.attributes.multiple;\n    };\n    FileSelectDirective.prototype.onChange = function () {\n        var files = this.element.nativeElement.files;\n        var options = this.getOptions();\n        var filters = this.getFilters();\n        this.uploader.addToQueue(files, options, filters);\n        this.onFileSelected.emit(files);\n        if (this.isEmptyAfterSelection()) {\n            this.element.nativeElement.value = '';\n        }\n    };\n    return FileSelectDirective;\n}());\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", file_uploader_class_1.FileUploader)\n], FileSelectDirective.prototype, \"uploader\", void 0);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", core_1.EventEmitter)\n], FileSelectDirective.prototype, \"onFileSelected\", void 0);\n__decorate([\n    core_1.HostListener('change'),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Object)\n], FileSelectDirective.prototype, \"onChange\", null);\nFileSelectDirective = __decorate([\n    core_1.Directive({ selector: '[ng2FileSelect]' }),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], FileSelectDirective);\nexports.FileSelectDirective = FileSelectDirective;\n","\"use strict\";\nvar FileType = (function () {\n    function FileType() {\n    }\n    FileType.getMimeClass = function (file) {\n        var mimeClass = 'application';\n        if (this.mime_psd.indexOf(file.type) !== -1) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('image.*')) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('video.*')) {\n            mimeClass = 'video';\n        }\n        else if (file.type.match('audio.*')) {\n            mimeClass = 'audio';\n        }\n        else if (file.type === 'application/pdf') {\n            mimeClass = 'pdf';\n        }\n        else if (this.mime_compress.indexOf(file.type) !== -1) {\n            mimeClass = 'compress';\n        }\n        else if (this.mime_doc.indexOf(file.type) !== -1) {\n            mimeClass = 'doc';\n        }\n        else if (this.mime_xsl.indexOf(file.type) !== -1) {\n            mimeClass = 'xls';\n        }\n        else if (this.mime_ppt.indexOf(file.type) !== -1) {\n            mimeClass = 'ppt';\n        }\n        if (mimeClass === 'application') {\n            mimeClass = this.fileTypeDetection(file.name);\n        }\n        return mimeClass;\n    };\n    FileType.fileTypeDetection = function (inputFilename) {\n        var types = {\n            'jpg': 'image',\n            'jpeg': 'image',\n            'tif': 'image',\n            'psd': 'image',\n            'bmp': 'image',\n            'png': 'image',\n            'nef': 'image',\n            'tiff': 'image',\n            'cr2': 'image',\n            'dwg': 'image',\n            'cdr': 'image',\n            'ai': 'image',\n            'indd': 'image',\n            'pin': 'image',\n            'cdp': 'image',\n            'skp': 'image',\n            'stp': 'image',\n            '3dm': 'image',\n            'mp3': 'audio',\n            'wav': 'audio',\n            'wma': 'audio',\n            'mod': 'audio',\n            'm4a': 'audio',\n            'compress': 'compress',\n            'zip': 'compress',\n            'rar': 'compress',\n            '7z': 'compress',\n            'lz': 'compress',\n            'z01': 'compress',\n            'pdf': 'pdf',\n            'xls': 'xls',\n            'xlsx': 'xls',\n            'ods': 'xls',\n            'mp4': 'video',\n            'avi': 'video',\n            'wmv': 'video',\n            'mpg': 'video',\n            'mts': 'video',\n            'flv': 'video',\n            '3gp': 'video',\n            'vob': 'video',\n            'm4v': 'video',\n            'mpeg': 'video',\n            'm2ts': 'video',\n            'mov': 'video',\n            'doc': 'doc',\n            'docx': 'doc',\n            'eps': 'doc',\n            'txt': 'doc',\n            'odt': 'doc',\n            'rtf': 'doc',\n            'ppt': 'ppt',\n            'pptx': 'ppt',\n            'pps': 'ppt',\n            'ppsx': 'ppt',\n            'odp': 'ppt'\n        };\n        var chunks = inputFilename.split('.');\n        if (chunks.length < 2) {\n            return 'application';\n        }\n        var extension = chunks[chunks.length - 1].toLowerCase();\n        if (types[extension] === undefined) {\n            return 'application';\n        }\n        else {\n            return types[extension];\n        }\n    };\n    return FileType;\n}());\n/*  MS office  */\nFileType.mime_doc = [\n    'application/msword',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n    'application/vnd.ms-word.document.macroEnabled.12',\n    'application/vnd.ms-word.template.macroEnabled.12'\n];\nFileType.mime_xsl = [\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\n    'application/vnd.ms-excel.template.macroEnabled.12',\n    'application/vnd.ms-excel.addin.macroEnabled.12',\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n];\nFileType.mime_ppt = [\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n];\n/* PSD */\nFileType.mime_psd = [\n    'image/photoshop',\n    'image/x-photoshop',\n    'image/psd',\n    'application/photoshop',\n    'application/psd',\n    'zz-application/zz-winassoc-psd'\n];\n/* Compressed files */\nFileType.mime_compress = [\n    'application/x-gtar',\n    'application/x-gcompress',\n    'application/compress',\n    'application/x-tar',\n    'application/x-rar-compressed',\n    'application/octet-stream'\n];\nexports.FileType = FileType;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar common_1 = require(\"@angular/common\");\nvar core_1 = require(\"@angular/core\");\nvar file_drop_directive_1 = require(\"./file-drop.directive\");\nvar file_select_directive_1 = require(\"./file-select.directive\");\nvar FileUploadModule = (function () {\n    function FileUploadModule() {\n    }\n    return FileUploadModule;\n}());\nFileUploadModule = __decorate([\n    core_1.NgModule({\n        imports: [common_1.CommonModule],\n        declarations: [file_drop_directive_1.FileDropDirective, file_select_directive_1.FileSelectDirective],\n        exports: [file_drop_directive_1.FileDropDirective, file_select_directive_1.FileSelectDirective]\n    })\n], FileUploadModule);\nexports.FileUploadModule = FileUploadModule;\n","\"use strict\";\nvar core_1 = require(\"@angular/core\");\nvar file_like_object_class_1 = require(\"./file-like-object.class\");\nvar file_item_class_1 = require(\"./file-item.class\");\nvar file_type_class_1 = require(\"./file-type.class\");\nfunction isFile(value) {\n    return (File && value instanceof File);\n}\nvar FileUploader = (function () {\n    function FileUploader(options) {\n        this.isUploading = false;\n        this.queue = [];\n        this.progress = 0;\n        this._nextIndex = 0;\n        this.options = {\n            autoUpload: false,\n            isHTML5: true,\n            filters: [],\n            removeAfterUpload: false,\n            disableMultipart: false,\n            formatDataFunction: function (item) { return item._file; },\n            formatDataFunctionIsAsync: false\n        };\n        this.setOptions(options);\n        this.response = new core_1.EventEmitter();\n    }\n    FileUploader.prototype.setOptions = function (options) {\n        this.options = Object.assign(this.options, options);\n        this.authToken = this.options.authToken;\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n        this.autoUpload = this.options.autoUpload;\n        this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n        if (this.options.maxFileSize) {\n            this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n        }\n        if (this.options.allowedFileType) {\n            this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n        }\n        if (this.options.allowedMimeType) {\n            this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n        }\n        for (var i = 0; i < this.queue.length; i++) {\n            this.queue[i].url = this.options.url;\n        }\n    };\n    FileUploader.prototype.addToQueue = function (files, options, filters) {\n        var _this = this;\n        var list = [];\n        for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\n            var file = files_1[_i];\n            list.push(file);\n        }\n        var arrayOfFilters = this._getFilters(filters);\n        var count = this.queue.length;\n        var addedFileItems = [];\n        list.map(function (some) {\n            if (!options) {\n                options = _this.options;\n            }\n            var temp = new file_like_object_class_1.FileLikeObject(some);\n            if (_this._isValidFile(temp, arrayOfFilters, options)) {\n                var fileItem = new file_item_class_1.FileItem(_this, some, options);\n                addedFileItems.push(fileItem);\n                _this.queue.push(fileItem);\n                _this._onAfterAddingFile(fileItem);\n            }\n            else {\n                var filter = arrayOfFilters[_this._failFilterIndex];\n                _this._onWhenAddingFileFailed(temp, filter, options);\n            }\n        });\n        if (this.queue.length !== count) {\n            this._onAfterAddingAll(addedFileItems);\n            this.progress = this._getTotalProgress();\n        }\n        this._render();\n        if (this.options.autoUpload) {\n            this.uploadAll();\n        }\n    };\n    FileUploader.prototype.removeFromQueue = function (value) {\n        var index = this.getIndexOfItem(value);\n        var item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progress = this._getTotalProgress();\n    };\n    FileUploader.prototype.clearQueue = function () {\n        while (this.queue.length) {\n            this.queue[0].remove();\n        }\n        this.progress = 0;\n    };\n    FileUploader.prototype.uploadItem = function (value) {\n        var index = this.getIndexOfItem(value);\n        var item = this.queue[index];\n        var transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n        item._prepareToUploading();\n        if (this.isUploading) {\n            return;\n        }\n        this.isUploading = true;\n        this[transport](item);\n    };\n    FileUploader.prototype.cancelItem = function (value) {\n        var index = this.getIndexOfItem(value);\n        var item = this.queue[index];\n        var prop = this.options.isHTML5 ? item._xhr : item._form;\n        if (item && item.isUploading) {\n            prop.abort();\n        }\n    };\n    FileUploader.prototype.uploadAll = function () {\n        var items = this.getNotUploadedItems().filter(function (item) { return !item.isUploading; });\n        if (!items.length) {\n            return;\n        }\n        items.map(function (item) { return item._prepareToUploading(); });\n        items[0].upload();\n    };\n    FileUploader.prototype.cancelAll = function () {\n        var items = this.getNotUploadedItems();\n        items.map(function (item) { return item.cancel(); });\n    };\n    FileUploader.prototype.isFile = function (value) {\n        return isFile(value);\n    };\n    FileUploader.prototype.isFileLikeObject = function (value) {\n        return value instanceof file_like_object_class_1.FileLikeObject;\n    };\n    FileUploader.prototype.getIndexOfItem = function (value) {\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\n    };\n    FileUploader.prototype.getNotUploadedItems = function () {\n        return this.queue.filter(function (item) { return !item.isUploaded; });\n    };\n    FileUploader.prototype.getReadyItems = function () {\n        return this.queue\n            .filter(function (item) { return (item.isReady && !item.isUploading); })\n            .sort(function (item1, item2) { return item1.index - item2.index; });\n    };\n    FileUploader.prototype.destroy = function () {\n        return void 0;\n    };\n    FileUploader.prototype.onAfterAddingAll = function (fileItems) {\n        return { fileItems: fileItems };\n    };\n    FileUploader.prototype.onBuildItemForm = function (fileItem, form) {\n        return { fileItem: fileItem, form: form };\n    };\n    FileUploader.prototype.onAfterAddingFile = function (fileItem) {\n        return { fileItem: fileItem };\n    };\n    FileUploader.prototype.onWhenAddingFileFailed = function (item, filter, options) {\n        return { item: item, filter: filter, options: options };\n    };\n    FileUploader.prototype.onBeforeUploadItem = function (fileItem) {\n        return { fileItem: fileItem };\n    };\n    FileUploader.prototype.onProgressItem = function (fileItem, progress) {\n        return { fileItem: fileItem, progress: progress };\n    };\n    FileUploader.prototype.onProgressAll = function (progress) {\n        return { progress: progress };\n    };\n    FileUploader.prototype.onSuccessItem = function (item, response, status, headers) {\n        return { item: item, response: response, status: status, headers: headers };\n    };\n    FileUploader.prototype.onErrorItem = function (item, response, status, headers) {\n        return { item: item, response: response, status: status, headers: headers };\n    };\n    FileUploader.prototype.onCancelItem = function (item, response, status, headers) {\n        return { item: item, response: response, status: status, headers: headers };\n    };\n    FileUploader.prototype.onCompleteItem = function (item, response, status, headers) {\n        return { item: item, response: response, status: status, headers: headers };\n    };\n    FileUploader.prototype.onCompleteAll = function () {\n        return void 0;\n    };\n    FileUploader.prototype._mimeTypeFilter = function (item) {\n        return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n    };\n    FileUploader.prototype._fileSizeFilter = function (item) {\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    };\n    FileUploader.prototype._fileTypeFilter = function (item) {\n        return !(this.options.allowedFileType &&\n            this.options.allowedFileType.indexOf(file_type_class_1.FileType.getMimeClass(item)) === -1);\n    };\n    FileUploader.prototype._onErrorItem = function (item, response, status, headers) {\n        item._onError(response, status, headers);\n        this.onErrorItem(item, response, status, headers);\n    };\n    FileUploader.prototype._onCompleteItem = function (item, response, status, headers) {\n        item._onComplete(response, status, headers);\n        this.onCompleteItem(item, response, status, headers);\n        var nextItem = this.getReadyItems()[0];\n        this.isUploading = false;\n        if (nextItem) {\n            nextItem.upload();\n            return;\n        }\n        this.onCompleteAll();\n        this.progress = this._getTotalProgress();\n        this._render();\n    };\n    FileUploader.prototype._headersGetter = function (parsedHeaders) {\n        return function (name) {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || void 0;\n            }\n            return parsedHeaders;\n        };\n    };\n    FileUploader.prototype._xhrTransport = function (item) {\n        var _this = this;\n        var that = this;\n        var xhr = item._xhr = new XMLHttpRequest();\n        var sendable;\n        this._onBeforeUploadItem(item);\n        if (typeof item._file.size !== 'number') {\n            throw new TypeError('The file specified is no longer valid');\n        }\n        if (!this.options.disableMultipart) {\n            sendable = new FormData();\n            this._onBuildItemForm(item, sendable);\n            var appendFile = function () { return sendable.append(item.alias, item._file, item.file.name); };\n            if (!this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n            // For AWS, Additional Parameters must come BEFORE Files\n            if (this.options.additionalParameter !== undefined) {\n                Object.keys(this.options.additionalParameter).forEach(function (key) {\n                    var paramVal = _this.options.additionalParameter[key];\n                    // Allow an additional parameter to include the filename\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\n                    }\n                    sendable.append(key, paramVal);\n                });\n            }\n            if (this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n        }\n        else {\n            sendable = this.options.formatDataFunction(item);\n        }\n        xhr.upload.onprogress = function (event) {\n            var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            _this._onProgressItem(item, progress);\n        };\n        xhr.onload = function () {\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\n            var response = _this._transformResponse(xhr.response, headers);\n            var gist = _this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n            var method = '_on' + gist + 'Item';\n            _this[method](item, response, xhr.status, headers);\n            _this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        xhr.onerror = function () {\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\n            var response = _this._transformResponse(xhr.response, headers);\n            _this._onErrorItem(item, response, xhr.status, headers);\n            _this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        xhr.onabort = function () {\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\n            var response = _this._transformResponse(xhr.response, headers);\n            _this._onCancelItem(item, response, xhr.status, headers);\n            _this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        xhr.open(item.method, item.url, true);\n        xhr.withCredentials = item.withCredentials;\n        if (this.options.headers) {\n            for (var _i = 0, _a = this.options.headers; _i < _a.length; _i++) {\n                var header = _a[_i];\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (item.headers.length) {\n            for (var _b = 0, _c = item.headers; _b < _c.length; _b++) {\n                var header = _c[_b];\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                that.response.emit(xhr.responseText);\n            }\n        };\n        if (this.options.formatDataFunctionIsAsync) {\n            sendable.then(function (result) { return xhr.send(JSON.stringify(result)); });\n        }\n        else {\n            xhr.send(sendable);\n        }\n        this._render();\n    };\n    FileUploader.prototype._getTotalProgress = function (value) {\n        if (value === void 0) { value = 0; }\n        if (this.options.removeAfterUpload) {\n            return value;\n        }\n        var notUploaded = this.getNotUploadedItems().length;\n        var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        var ratio = 100 / this.queue.length;\n        var current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    };\n    FileUploader.prototype._getFilters = function (filters) {\n        if (!filters) {\n            return this.options.filters;\n        }\n        if (Array.isArray(filters)) {\n            return filters;\n        }\n        if (typeof filters === 'string') {\n            var names_1 = filters.match(/[^\\s,]+/g);\n            return this.options.filters\n                .filter(function (filter) { return names_1.indexOf(filter.name) !== -1; });\n        }\n        return this.options.filters;\n    };\n    FileUploader.prototype._render = function () {\n        return void 0;\n    };\n    FileUploader.prototype._queueLimitFilter = function () {\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    };\n    FileUploader.prototype._isValidFile = function (file, filters, options) {\n        var _this = this;\n        this._failFilterIndex = -1;\n        return !filters.length ? true : filters.every(function (filter) {\n            _this._failFilterIndex++;\n            return filter.fn.call(_this, file, options);\n        });\n    };\n    FileUploader.prototype._isSuccessCode = function (status) {\n        return (status >= 200 && status < 300) || status === 304;\n    };\n    FileUploader.prototype._transformResponse = function (response, headers) {\n        return response;\n    };\n    FileUploader.prototype._parseHeaders = function (headers) {\n        var parsed = {};\n        var key;\n        var val;\n        var i;\n        if (!headers) {\n            return parsed;\n        }\n        headers.split('\\n').map(function (line) {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        });\n        return parsed;\n    };\n    FileUploader.prototype._onWhenAddingFileFailed = function (item, filter, options) {\n        this.onWhenAddingFileFailed(item, filter, options);\n    };\n    FileUploader.prototype._onAfterAddingFile = function (item) {\n        this.onAfterAddingFile(item);\n    };\n    FileUploader.prototype._onAfterAddingAll = function (items) {\n        this.onAfterAddingAll(items);\n    };\n    FileUploader.prototype._onBeforeUploadItem = function (item) {\n        item._onBeforeUpload();\n        this.onBeforeUploadItem(item);\n    };\n    FileUploader.prototype._onBuildItemForm = function (item, form) {\n        item._onBuildForm(form);\n        this.onBuildItemForm(item, form);\n    };\n    FileUploader.prototype._onProgressItem = function (item, progress) {\n        var total = this._getTotalProgress(progress);\n        this.progress = total;\n        item._onProgress(progress);\n        this.onProgressItem(item, progress);\n        this.onProgressAll(total);\n        this._render();\n    };\n    FileUploader.prototype._onSuccessItem = function (item, response, status, headers) {\n        item._onSuccess(response, status, headers);\n        this.onSuccessItem(item, response, status, headers);\n    };\n    FileUploader.prototype._onCancelItem = function (item, response, status, headers) {\n        item._onCancel(response, status, headers);\n        this.onCancelItem(item, response, status, headers);\n    };\n    return FileUploader;\n}());\nexports.FileUploader = FileUploader;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require(\"./file-upload/file-select.directive\"));\n__export(require(\"./file-upload/file-drop.directive\"));\n__export(require(\"./file-upload/file-uploader.class\"));\n__export(require(\"./file-upload/file-item.class\"));\n__export(require(\"./file-upload/file-like-object.class\"));\nvar file_upload_module_1 = require(\"./file-upload/file-upload.module\");\nexports.FileUploadModule = file_upload_module_1.FileUploadModule;\n","module.exports = \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <button mat-raised-button type=\\\"submit\\\" (click)=\\\"goBack()\\\" style=\\\"margin-left: 20px;\\\" class=\\\"btn btn-sm btn-rose pull-left\\\"><i\\r\\n                aria-hidden=\\\"true\\\" class=\\\"fa fa-arrow-circle-left\\\" style=\\\"padding-bottom: 3px;\\\"></i>&nbsp;&nbsp;Back to\\r\\n            list\\r\\n        </button>\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-header card-header-icon card-header-rose\\\">\\r\\n                            <div class=\\\"card-icon\\\">\\r\\n                                <i class=\\\"material-icons\\\">info</i>\\r\\n                            </div>\\r\\n                            <h4 class=\\\"card-title\\\">Podcast Detail\\r\\n                            </h4>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <p><b>Title:</b>\\r\\n                                            {{titleValue}}\\r\\n                                        </p>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <p><b>Uploaded By:</b>\\r\\n                                            {{uploadedByValue}}\\r\\n                                        </p>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <p><b>Tags:</b>\\r\\n                                            {{tagsValue}}\\r\\n                                        </p>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <p><b>Artist Name:</b>\\r\\n                                            {{artistNameValue}}\\r\\n                                        </p>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <p><b>Created On:</b>\\r\\n                                            {{createdDateTimeValue}}\\r\\n                                        </p>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <p><b>Amount:</b>\\r\\n                                            {{amountValue}}\\r\\n                                        </p>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <br />\\r\\n                                    <audio controls=\\\"controls\\\" src=\\\"https://ipfs.io/ipfs/{{podcastId}}\\\" style=\\\"width:100%\\\">\\r\\n                                        Your browser does not support the <a href=\\\"http://caniuse.com/#search=audio\\\"><code>audio</code></a>\\r\\n                                        element.\\r\\n                                    </audio>\\r\\n                                    <br />\\r\\n                                    <br />\\r\\n                                    <br />                                    \\r\\n                                        <b>Likes:&nbsp;&nbsp;&nbsp;</b>{{likesValue}}\\r\\n                                        <button mat-raised-button type=\\\"submit\\\" (click)=\\\"callLikeFunc()\\\" class=\\\"btn btn-rose pull-right\\\">{{likeButtonValue}}</button>\\r\\n                                        <button mat-raised-button type=\\\"submit\\\" *ngIf=\\\"isPaidPodcast && !isPurchasedPodcast\\\" (click)=\\\"callPurchasePodcast()\\\" class=\\\"btn btn-rose pull-right\\\">Purchase</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"clearfix\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<ngx-spinner bdColor = \\\"rgba(51, 51, 51, 0.8)\\\" size = \\\"large\\\" color = \\\"#fff\\\" type = \\\"square-jelly-box\\\" ></ngx-spinner>\"","import { Component, OnInit, ElementRef} from '@angular/core';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport { Http, Headers } from '@angular/http';\r\nimport swal from 'sweetalert2';\r\nimport {NgxSpinnerService} from 'ngx-spinner'\r\nimport {Global} from '../../global';\r\n\r\n@Component({\r\n  selector: 'app-detailForLatestAndPurchasedPodcast-cmp',\r\n  templateUrl: 'detailForLatestAndPurchasedPodcast.component.html',\r\n  styles: []\r\n})\r\n\r\nexport class DetailForLatestAndPurchasedPodcastComponent implements OnInit {\r\n\r\n  isPaidPodcast = false;\r\n  titleValue:any;\r\n  uploadedByValue:any;\r\n  tagsValue:any;\r\n  artistNameValue:any;\r\n  createdDateTimeValue:any;\r\n  amountValue:any;\r\n  likesValue = 0;\r\n  likeButtonValue = \"Like\";\r\n  isPurchasedPodcast = true;\r\n  podcastId:string;\r\n  private id: string;\r\n\r\n  constructor(private http: Http, private router: Router,private route: ActivatedRoute,private spinner:NgxSpinnerService) { }\r\n\r\n  goBack() \r\n  {\r\n    this.router.navigate([\"tables/latestPodcast\"]);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.spinner.show();\r\n    this.route.params.subscribe(params => {\r\n      this.id = params.id;\r\n      console.log(params.id);\r\n      console.log(this.id);\r\n\r\n      let headers = new Headers();\r\n        headers.append(\"token\",localStorage.getItem(\"token\")); \r\n        headers.append(\"emailAddress\",localStorage.getItem(\"emailAddress\"));\r\n\r\n        this.http.post(Global.API_ENDPOINT+'/getPodcastForCurrUser',{\"id\":this.id},{headers: headers}).subscribe((data) => {\r\n          console.log(data);\r\n            var body = JSON.parse(data.text());\r\n\r\n            this.isPaidPodcast = (body.isPaidPodcast === \"false\" ? false:true);\r\n            this.isPurchasedPodcast = body.isPurchasedPodcast;\r\n            this.uploadedByValue = body.uploadedByValue;\r\n            this.titleValue = body.titleValue;\r\n            this.tagsValue = body.tagsValue;\r\n            this.artistNameValue = body.artistNameValue;\r\n            this.createdDateTimeValue = body.createdDateTimeValue;\r\n            this.likesValue = body.likesValue;\r\n            this.likeButtonValue = (body.isLikedPodcast === \"true\") ? \"Liked\" : \"Like\";\r\n            this.amountValue = (body.amountValue === \"undefined\" ? \"0\": body.amountValue);\r\n            if(this.isPurchasedPodcast){\r\n              this.amountValue = \"0\";\r\n            }\r\n            var path = body.path;\r\n\r\n            if(!this.isPaidPodcast || (this.isPaidPodcast && this.isPurchasedPodcast)){\r\n              this.podcastId = path;\r\n            }\r\n            else{\r\n              this.podcastId = \"\";\r\n            }\r\n            this.spinner.hide();\r\n        }, (err) => {\r\n          this.spinner.hide();\r\n          var body = JSON.parse(err.text());\r\n            swal({\r\n              title: body.status,\r\n              text: \"\",\r\n              timer: 2000,\r\n              showConfirmButton: false\r\n            }).catch(swal.noop);\r\n        })\r\n    })\r\n    \r\n   }\r\n\r\n   callLikeFunc(){\r\n    let headers = new Headers();\r\n    headers.append(\"token\",localStorage.getItem(\"token\")); \r\n    headers.append(\"emailAddress\",localStorage.getItem(\"emailAddress\")); \r\n    \r\n    if(this.likeButtonValue === \"Like\"){\r\n      this.likeButtonValue = \"Liked\";\r\n      this.likesValue = this.likesValue + 1;\r\n\r\n      this.http.post(Global.API_ENDPOINT+'/likePodcast',{\"id\":this.id},{headers: headers}).subscribe((data) => {\r\n        \r\n      })\r\n    }\r\n   \r\n  }\r\n\r\n   callPurchasePodcast(){\r\n     if(this.isPaidPodcast && !this.isPurchasedPodcast){\r\n      swal({\r\n        title: 'Paid Podcast',\r\n        text: \"Do you want to purchase \" + this.titleValue + \" podcast by \" + this.artistNameValue + \" for \" + this.amountValue + \" pods token?\",\r\n        type: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Confirm'\r\n      }).then((result) => {\r\n        \r\n        if (result.value === true) {\r\n          this.spinner.show();\r\n          let headers = new Headers();\r\n          headers.append(\"token\", localStorage.getItem(\"token\"));\r\n          headers.append(\"emailAddress\", localStorage.getItem(\"emailAddress\"));\r\n\r\n          this.http.post(Global.API_ENDPOINT+'/transferPodsToPurchase',{\"id\":this.id,\"amount\":this.amountValue},{ headers: headers }).subscribe((data) => {\r\n            var body = JSON.parse(data.text());\r\n            \r\n            this.isPurchasedPodcast = true;\r\n            this.podcastId = body.path;\r\n\r\n            this.spinner.hide();\r\n          }, (err) => { \r\n            this.spinner.hide();\r\n            var body = JSON.parse(err.text());\r\n            swal({\r\n              title: body.status,\r\n              text: \"\",\r\n              timer: 2000,\r\n              showConfirmButton: false\r\n            }).catch(swal.noop);\r\n          })\r\n          }\r\n        });\r\n     }\r\n   }\r\n}","module.exports = \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <button mat-raised-button type=\\\"submit\\\" (click)=\\\"goBack()\\\" style=\\\"margin-left: 20px;\\\" class=\\\"btn btn-sm btn-rose pull-left\\\"><i\\r\\n                aria-hidden=\\\"true\\\" class=\\\"fa fa-arrow-circle-left\\\" style=\\\"padding-bottom: 3px;\\\"></i>&nbsp;&nbsp;Back to list\\r\\n        </button>\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-header card-header-icon card-header-rose\\\">\\r\\n                            <div class=\\\"card-icon\\\">\\r\\n                                <i class=\\\"material-icons\\\">cloud_upload</i>\\r\\n                            </div>\\r\\n                            <h4 class=\\\"card-title\\\">Upload Podcast\\r\\n                            </h4>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <form #podcastDetailForm=\\\"ngForm\\\" (ngSubmit)=\\\"editPodcastDetail(podcastDetailForm.value)\\\"\\r\\n                                (change)=\\\"mark_changed()\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"titleName\\\" [(ngModel)]=\\\"titleName\\\"\\r\\n                                        placeholder=\\\"Enter Title\\\">\\r\\n                                    <div *ngIf=\\\"!isTitlePresent\\\" class=\\\"help-block\\\" style=\\\"text-align: right;color:red\\\">Title\\r\\n                                        for the podcast must be present</div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"artistName\\\" [(ngModel)]=\\\"artistName\\\"\\r\\n                                                    placeholder=\\\"Enter Artist Name\\\" style=\\\"margin-top:25px\\\">\\r\\n                                            </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <tag-input [(ngModel)]=\\\"tags\\\" name=\\\"tags\\\" placeholder=\\\"+ Tag\\\" secondaryPlaceholder=\\\"Add Tags\\\" aria-placeholder=\\\"tags\\\"></tag-input>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\" style=\\\"margin-top:3%\\\">\\r\\n                                            <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"selectedType\\\" name=\\\"selectedType\\\" [disabled]=\\\"amountDisable\\\">\\r\\n                                                <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let type of podcastTypes\\\"\\r\\n                                                    [value]=\\\"type\\\" (change)=\\\"radioChange($event)\\\">\\r\\n                                                    {{type}} &nbsp;&nbsp;&nbsp;&nbsp;\\r\\n                                                </mat-radio-button>\\r\\n                                            </mat-radio-group>\\r\\n                                            <div *ngIf=\\\"!isRadioButtonSelected\\\" class=\\\"help-block\\\" style=\\\"text-align: left;color:red\\\">Please\\r\\n                                                select atleast one podcast type</div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\" *ngIf=\\\"isPaidPodcast\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <input type=\\\"text\\\" [disabled]=\\\"amountDisable\\\" class=\\\"form-control\\\" name=\\\"amount\\\" [(ngModel)]=\\\"amount\\\"\\r\\n                                                placeholder=\\\"Number of Pods Token Required to purchase podcast\\\">\\r\\n                                            <div *ngIf=\\\"!isAmountPresent && isPaidPodcast\\\" class=\\\"help-block\\\" style=\\\"text-align: right;color:red\\\">{{errorTextForAmount}}</div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"!showPlayButton\\\">\\r\\n                                    <div ng2FileDrop [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\" (fileOver)=\\\"fileOverBase($event)\\\"\\r\\n                                        [uploader]=\\\"uploader\\\" style=\\\"border: dotted 3px lightgray;min-height: 20px;padding: 19px;margin-bottom: 20px;background-color: #f5f5f5;border-radius:4px;box-shadow:inset 0px 1px 1px rgba(0,0,0,0.05)\\\">\\r\\n                                        Drop the File Here\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <label class=\\\"btn btn-primary\\\" style=\\\"background-color:#e91e63 !important;\\\">\\r\\n                                            Browse File <input type=\\\"file\\\" style=\\\"display: none;\\\" class=\\\"form-control\\\" name=\\\"single\\\" ng2FileSelect [uploader]=\\\"uploader\\\" placeholder=\\\"choose file\\\"/>\\r\\n                                        </label>\\r\\n                                        <div *ngIf=\\\"!selectFileToUpload\\\" class=\\\"help-block\\\" style=\\\"text-align: left;color:red\\\">Please select a file</div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <table class=\\\"table\\\">\\r\\n                                            <thead>\\r\\n                                                <tr>\\r\\n                                                    <th width=\\\"50%\\\">Name</th>\\r\\n                                                    <th>Size</th>\\r\\n                                                    <th>Progress</th>\\r\\n                                                    <th>Status</th>\\r\\n                                                    <th>Actions</th>\\r\\n                                                </tr>\\r\\n                                            </thead>\\r\\n                                            <tbody>\\r\\n                                                <tr *ngFor=\\\"let item of uploader.queue\\\">\\r\\n                                                    <td>\\r\\n                                                        <strong>{{ item.file.name }}</strong>\\r\\n                                                    </td>\\r\\n                                                    <td nowrap>{{ item.file.size/1024/1024 | number:'.2' }} MB</td>\\r\\n                                                    <td>\\r\\n                                                        <div class=\\\"progress\\\" style=\\\"margin-bottom: 0;\\\">\\r\\n                                                            <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': item.progress + '%' }\\\"></div>\\r\\n                                                        </div>\\r\\n                                                    </td>\\r\\n                                                    <td class=\\\"text-center\\\">\\r\\n                                                        <span *ngIf=\\\"item.isSuccess\\\">\\r\\n                                                            <i class=\\\"material-icons\\\">check_circle</i>\\r\\n                                                        </span>\\r\\n                                                        <span *ngIf=\\\"item.isCancel\\\">\\r\\n                                                            <i class=\\\"material-icons\\\">cancel</i>\\r\\n                                                        </span>\\r\\n                                                        <span *ngIf=\\\"item.isError\\\">\\r\\n                                                            <span *ngIf=\\\"item.isError\\\">\\r\\n                                                                <i class=\\\"material-icons\\\">error</i>\\r\\n                                                            </span>\\r\\n                                                        </span>\\r\\n                                                    </td>\\r\\n                                                    <td nowrap>\\r\\n                                                        <!--<button type=\\\"button\\\" class=\\\"btn btn-success btn-xs\\\" style=\\\"background-color:#3581f2 !important;\\\"\\r\\n                                                            (click)=\\\"item.upload();\\\" [disabled]=\\\"item.isReady || item.isUploading || item.isSuccess\\\">\\r\\n                                                            <i class=\\\"material-icons\\\">cloud_upload</i> Upload\\r\\n                                                        </button>-->\\r\\n                                                        <!--<button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"item.cancel()\\\"\\r\\n                                                            [disabled]=\\\"!item.isUploading\\\">\\r\\n                                                            <i class=\\\"material-icons\\\">cancel</i> Cancel\\r\\n                                                        </button>-->\\r\\n                                                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"deleteFile(item)\\\">\\r\\n                                                            <i class=\\\"material-icons\\\">delete_forever</i> Delete\\r\\n                                                        </button>\\r\\n                                                    </td>\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n                                        </table>\\r\\n                                        <div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"showPlayButton\\\">\\r\\n                                    <audio controls=\\\"controls\\\" src=\\\"https://ipfs.io/ipfs/{{pathOfPodcastId}}\\\" style=\\\"width:100%\\\">\\r\\n                                        Your browser does not support the <a href=\\\"http://caniuse.com/#search=audio\\\"><code>audio</code></a> element.\\r\\n                                    </audio>\\r\\n                                </div>\\r\\n                                <button mat-raised-button type=\\\"submit\\\" (click)=\\\"loadPublishedPodcast()\\\" class=\\\"btn btn-rose pull-right\\\">Cancel</button>\\r\\n                                <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-rose pull-right\\\">Save</button>\\r\\n                                <div class=\\\"clearfix\\\"></div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--Accordian here-->\\r\\n                    <div class=\\\"card\\\" *ngIf=\\\"isPaidPodcast && isFromEdit\\\">\\r\\n                            <div class=\\\"card-header card-header-rose card-header-icon\\\">\\r\\n                                <div class=\\\"card-icon\\\">\\r\\n                                    <i class=\\\"material-icons\\\">shop</i>\\r\\n                                </div>\\r\\n                                <h4 class=\\\"card-title\\\">Podcast Purchased By:</h4>\\r\\n                            </div>\\r\\n                            <br /><br />\\r\\n                            <div class=\\\"col-lg-12\\\" style=\\\"padding-top:2%;padding-bottom:2%\\\">\\r\\n                                <mat-accordion *ngFor=\\\"let data of podcastPurchasedByDetail\\\">\\r\\n                                    <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\">\\r\\n                                        <mat-expansion-panel-header>\\r\\n                                            <mat-panel-title>\\r\\n                                                {{data.name}}\\r\\n                                            </mat-panel-title>\\r\\n                                        </mat-expansion-panel-header>\\r\\n                                        <p>Email Id: {{data.emailId}}</p>\\r\\n                                    </mat-expansion-panel>\\r\\n                                </mat-accordion>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<ngx-spinner bdColor = \\\"rgba(51, 51, 51, 0.8)\\\" size = \\\"large\\\" color = \\\"#fff\\\" type = \\\"square-jelly-box\\\" ></ngx-spinner>\"","import { Component, OnInit, ElementRef} from '@angular/core';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport { Http, Headers } from '@angular/http';\r\nimport swal from 'sweetalert2';\r\nimport { FileUploader } from \"ng2-file-upload\";\r\nimport {NgxSpinnerService} from 'ngx-spinner'\r\nimport {Global} from '../../global';\r\n\r\n@Component({\r\n  selector: 'app-podcastDetailforms-cmp',\r\n  templateUrl: 'podcastDetailforms.component.html',\r\n  styles: [`md-calendar {\r\n      width: 300px;\r\n  }`]\r\n})\r\n\r\nexport class PodcastDetailComponent implements OnInit {\r\n\r\n  UIChange = false;\r\n  tags = [];\r\n  isPaidPodcast = false;\r\n  isAmountPresent = true;\r\n  isTitlePresent = true;\r\n  isErrorPresent = false;\r\n  isRadioButtonSelected = true;\r\n  selectFileToUpload = true;\r\n  fileUploaded = false;\r\n  fileId: string;\r\n  amountDisable = false;\r\n  parameterId: string;\r\n\r\n  titleName: string;\r\n  errorTextForAmount: string;\r\n  amount: string;\r\n  artistName: string;\r\n  selectedType: string;\r\n  podcastTypes: string[] = ['Paid Podcast', 'Free Podcast'];\r\n  tagsArray = [];\r\n  showPlayButton = false;\r\n  isFromEdit = false;\r\n  \r\n  pathOfPodcastId = null;\r\n\r\n  podcastPurchasedByDetail = [];\r\n  public uploader: FileUploader = new FileUploader({ url: Global.API_ENDPOINT+'/uploadfile' });\r\n  public hasBaseDropZoneOver:boolean = false;\r\n  public hasAnotherDropZoneOver:boolean = false;\r\n  \r\n  public fileOverBase(e:any):void {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n \r\n  public fileOverAnother(e:any):void {\r\n    this.hasAnotherDropZoneOver = e;\r\n  }\r\n\r\n  constructor(private http: Http, private router: Router,private route: ActivatedRoute,private spinner:NgxSpinnerService) { }\r\n\r\n  radioChange(event) {\r\n    if (event.value === \"Paid Podcast\") {\r\n      this.selectedType = \"Paid Podcast\";\r\n      this.isPaidPodcast = true;\r\n    }\r\n    else if (event.value === \"Free Podcast\") {\r\n      this.isPaidPodcast = false;\r\n      this.selectedType = \"Free Podcast\";\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    if (!this.UIChange) {\r\n      this.router.navigate([\"tables/userPublishedTable\"]);\r\n    }\r\n    else {\r\n      if(this.fileUploaded)\r\n      {\r\n        this.router.navigate([\"tables/userPublishedTable\"]);\r\n      }\r\n      else{\r\n        swal({\r\n          title: 'Are you sure?',\r\n          text: \"Changes will be lost\",\r\n          type: 'warning',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          confirmButtonText: 'Confirm'\r\n        }).then((result) => {\r\n          if (result.value) {\r\n            this.router.navigate([\"tables/userPublishedTable\"]);\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  mark_changed() {\r\n    this.UIChange = true;\r\n  }\r\n\r\n  editPodcastDetail(form) {\r\n    if (this.isPaidPodcast && !this.amountDisable && (form.amount === undefined || (form.amount).trim().length === 0)) {\r\n      this.isAmountPresent = false;\r\n      this.errorTextForAmount = \"Amount of pods are required\"\r\n      this.isErrorPresent = true;\r\n    }\r\n    if (parseInt(form.amount) === NaN && !this.amountDisable) {\r\n      this.isAmountPresent = false;\r\n      this.errorTextForAmount = \"Amount should be expressed in Integer\"\r\n      this.isErrorPresent = true;\r\n    }\r\n    if (form.titleName === undefined || (form.titleName).trim().length === 0) {\r\n      this.isTitlePresent = false;\r\n      this.isErrorPresent = true;\r\n    }\r\n    if (this.selectedType === undefined && !this.amountDisable) {\r\n      this.isErrorPresent = true;\r\n      this.isRadioButtonSelected = false;\r\n    }\r\n\r\n    if (!this.isFromEdit && this.uploader.queue.length === 0) {\r\n      this.isErrorPresent = true;\r\n      this.selectFileToUpload = false;\r\n    }\r\n\r\n    if (!this.isErrorPresent && !this.isFromEdit) {\r\n\r\n      for (var i = 0; i < form.tags.length; i++) {\r\n        this.tagsArray.push(form.tags[i].display);\r\n      }\r\n\r\n      this.uploader.onBuildItemForm = (fileItem: any, form: any) => {\r\n        form.append('title', this.titleName);\r\n        form.append('artist', this.artistName);\r\n        form.append('tags', this.tagsArray);\r\n        form.append('isPaidPodcast', this.isPaidPodcast);\r\n        form.append('amount', this.amount);\r\n        form.append('token', localStorage.getItem(\"token\"))\r\n        form.append('emailAddress', localStorage.getItem(\"emailAddress\"))\r\n      };\r\n\r\n      this.uploader.uploadAll();\r\n\r\n      this.uploader.onSuccessItem = (item: any, response: string, status: number, headers: any): any => {\r\n        if (response) {\r\n          this.fileUploaded = true;\r\n          this.UIChange = false;\r\n          var body = JSON.parse(response);\r\n            swal({\r\n              title: body.status,\r\n              text: \"\",\r\n              timer: 2000,\r\n              showConfirmButton: false\r\n          }).catch(swal.noop)\r\n        }\r\n      }\r\n\r\n      this.uploader.onErrorItem = (item: any, response: string, status: number, headers: any): any => {\r\n        if (response) {\r\n          var body = JSON.parse(response);\r\n            swal({\r\n              title: body.status,\r\n              text: \"\",\r\n              timer: 2000,\r\n              showConfirmButton: false\r\n          }).catch(swal.noop)\r\n        }\r\n      }\r\n    }\r\n    else if(!this.isErrorPresent && this.isFromEdit)\r\n    {\r\n      this.spinner.show();\r\n        let headers = new Headers();\r\n        headers.append(\"token\",localStorage.getItem(\"token\")); \r\n        headers.append(\"emailAddress\",localStorage.getItem(\"emailAddress\"));\r\n\r\n        this.tagsArray = [];\r\n\r\n        for (var i = 0; i < form.tags.length; i++) {\r\n          this.tagsArray.push(form.tags[i].display);\r\n        }\r\n        \r\n        var editedObject = {\r\n          'title':this.titleName,\r\n          'artist': this.artistName,\r\n          'tags': this.tagsArray,\r\n          'isPaidPodcast': this.isPaidPodcast,\r\n          'amount':this.amount,\r\n          'id': this.fileId,\r\n          'parameterId':this.parameterId\r\n        }\r\n\r\n        console.log(editedObject);\r\n\r\n        this.http.post(Global.API_ENDPOINT+'/updatePodcastDetails',editedObject,{headers: headers}).subscribe((data) => {\r\n          this.spinner.hide();\r\n          var body = JSON.parse(data.text());\r\n          this.UIChange = false;\r\n\r\n          swal({\r\n            title: body.status,\r\n            text: \"\",\r\n            timer: 2000,\r\n            showConfirmButton: false\r\n          }).catch(swal.noop);\r\n        },(err) => { \r\n          this.spinner.hide();\r\n          var body = JSON.parse(err.text());\r\n          swal({\r\n            title: body.status,\r\n            text: \"\",\r\n            timer: 2000,\r\n            showConfirmButton: false\r\n          }).catch(swal.noop);\r\n        })\r\n    }\r\n  }\r\n\r\n  deleteFile(item){\r\n    console.log(item);\r\n    this.uploader.removeFromQueue(item);\r\n  }\r\n\r\n  loadPublishedPodcast() {\r\n    this.goBack()\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.spinner.show();\r\n    this.route.params.subscribe(params => {\r\n\r\n      this.parameterId = params.id;\r\n\r\n      let headers = new Headers();\r\n        headers.append(\"token\",localStorage.getItem(\"token\")); \r\n        headers.append(\"emailAddress\",localStorage.getItem(\"emailAddress\"));\r\n\r\n        this.http.post(Global.API_ENDPOINT+'/getPodcastDetailsForView',{\"id\":params.id},{headers: headers}).subscribe((data) => {\r\n            this.showPlayButton = true;\r\n            this.isFromEdit = true;\r\n\r\n            var jsonData = data.json();\r\n            this.amountDisable = jsonData.amountDisable;\r\n            if(jsonData.status !== \"Adding Podcast\")\r\n            {  \r\n\r\n              jsonData = jsonData.data;\r\n              \r\n              this.fileId = jsonData.path\r\n              this.titleName = jsonData.title;\r\n              this.artistName = jsonData.artistName;\r\n              \r\n              if(jsonData.amount!==\"undefined\")\r\n              {\r\n                this.selectedType = \"Paid Podcast\";\r\n                this.isPaidPodcast = true;\r\n                this.amount = jsonData.amount\r\n              }\r\n              else\r\n              {\r\n                this.selectedType = \"Free Podcast\";\r\n              }\r\n\r\n              this.podcastPurchasedByDetail = jsonData.purchasedUserList;\r\n\r\n              var tagsArr = jsonData.tags.split(\",\");\r\n              for (var i = 0; i <  tagsArr.length; i++) \r\n              {\r\n                this.tags.push({ \"display\":  tagsArr[i], \"value\":  tagsArr[i] });\r\n              }\r\n            }\r\n            else\r\n            {\r\n              this.showPlayButton = false;\r\n              this.isFromEdit = false;\r\n            }\r\n            this.pathOfPodcastId = jsonData.path;\r\n            this.spinner.hide();\r\n        }, (err) => { \r\n          var body = JSON.parse(err.text());\r\n          swal({\r\n            title: body.status,\r\n            text: \"\",\r\n            timer: 2000,\r\n            showConfirmButton: false\r\n        }).catch(swal.noop)\r\n        })\r\n    })\r\n   }\r\n}","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-primary card-header-icon\\\">\\n                        <div class=\\\"card-icon\\\">\\n                            <i class=\\\"material-icons\\\">assignment</i>\\n                        </div>\\n                        <h4 class=\\\"card-title\\\">Latest Podcast</h4>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"toolbar\\\">\\n                        </div>\\n                        <div class=\\\"material-datatables\\\">\\n                            <table id = \\\"latestPodcastDataTableId\\\" class=\\\"table table-striped table-no-bordered table-hover\\\"\\n                                cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th>{{ latestPodcastDataTable.headerRow[0] }}</th>\\n                                        <th>{{ latestPodcastDataTable.headerRow[1] }}</th>\\n                                        <th>{{ latestPodcastDataTable.headerRow[2] }}</th>\\n                                        <th>{{ latestPodcastDataTable.headerRow[3] }}</th>\\n                                        <th>{{ latestPodcastDataTable.headerRow[4] }}</th>\\n                                        <th class=\\\"disabled-sorting\\\">{{ latestPodcastDataTable.headerRow[5] }}</th>\\n                                        <th [hidden]=\\\"true\\\">{{latestPodcastDataTable.headerRow[6]}}</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let row of latestPodcastDataTable.dataRows; let i=index\\\">\\n                                        <td>{{row[0]}}</td>\\n                                        <td>{{row[1]}}</td>\\n                                        <td>{{row[2]}}</td>\\n                                        <td>{{row[3]}}</td>\\n                                        <td>{{row[4]}}</td>\\n                                        <td>\\n                                            <a [routerLink]=\\\"['/tables/latestPodcast/'+row[6]]\\\" class=\\\"btn btn-link btn-warning btn-just-icon\\\"\\n                                                style=\\\"color:rgb(171, 71, 188)\\\"><i class=\\\"material-icons\\\" style=\\\"font-size:18px\\\">remove_red_eye</i></a>\\n                                        </td>\\n                                        <td [hidden]=\\\"true\\\">{{row[6]}}</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <!-- end content-->\\n                </div>\\n                <!--  end card  -->\\n            </div>\\n            <!-- end col-md-12 -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n</div>\\n<ngx-spinner bdColor = \\\"rgba(51, 51, 51, 0.8)\\\" size = \\\"large\\\" color = \\\"#fff\\\" type = \\\"square-jelly-box\\\" ></ngx-spinner>\"","import { Component, OnInit, AfterViewInit, Output, EventEmitter, Injectable, Inject  } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Http, Headers } from '@angular/http';\nimport swal from 'sweetalert2';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Global } from '../../global';\n\ndeclare interface DataTable {\n  headerRow: string[];\n  dataRows: string[][];\n}\n\ndeclare const $: any;\n\n@Component({\n  selector: 'app-data-table-cmp',\n  templateUrl: 'datatable.component.html'\n})\n\n@Injectable()\nexport class DataTableComponent implements OnInit,AfterViewInit {\n  public latestPodcastDataTable: DataTable;\n  constructor(private http: Http, private router: Router, private spinner: NgxSpinnerService) { }\n\n  ngOnInit() {\n\n    console.log(\"Inside ngoninit\");\n\n    this.spinner.show();\n    \n    let headers = new Headers();\n    headers.append(\"token\", localStorage.getItem(\"token\"));\n    headers.append(\"emailAddress\", localStorage.getItem(\"emailAddress\"));\n    this.http.get(Global.API_ENDPOINT + '/getLatestPodcast', { headers: headers }).subscribe((data) => {\n      console.log(\"Data in this.get\");\n      console.log(data);\n      \n      this.latestPodcastDataTable = {\n        headerRow: ['Title', 'Artist', 'Date', 'Tag', 'Paid', 'View', 'id'],\n        dataRows: data.json().data\n      };\n\n      this.spinner.hide();\n    }, (err) => {\n      this.spinner.hide();\n      var body = JSON.parse(err.text());\n      swal({\n        title: body.status,\n        text: \"\",\n        timer: 3000,\n        showConfirmButton: false\n      }).catch(swal.noop);\n    })\n  }\n  \n  ngAfterViewInit() {\n    $('#latestPodcastDataTableId').DataTable({\n      \"pagingType\": \"full_numbers\",\n      \"lengthMenu\": [\n        [10, 25, 50, -1],\n        [10, 25, 50, \"All\"]\n      ],\n      responsive: true,\n      language: {\n        search: \"_INPUT_\",\n        searchPlaceholder: \"Search records\",\n      }\n\n    });\n    $('.card .material-datatables label').addClass('form-group');\n  }\n}","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-primary card-header-icon\\\">\\n                        <div class=\\\"card-icon\\\">\\n                            <i class=\\\"material-icons\\\">assignment</i>\\n                        </div>\\n                        <h4 class=\\\"card-title\\\">Purchased Podcast</h4>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"toolbar\\\">\\n                            <!--        Here you can write extra buttons/actions for the toolbar              -->\\n                        </div>\\n                        <div class=\\\"material-datatables\\\">\\n                            <table id=\\\"purchasedTableId\\\" class=\\\"table table-striped table-no-bordered table-hover\\\"\\n                                cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th>{{ purchasedTable.headerRow[0] }}</th>\\n                                        <th>{{ purchasedTable.headerRow[1] }}</th>\\n                                        <th>{{ purchasedTable.headerRow[2] }}</th>\\n                                        <th>{{ purchasedTable.headerRow[3] }}</th>\\n                                        <th class=\\\"disabled-sorting\\\">{{ purchasedTable.headerRow[4] }}</th>\\n                                        <th class=\\\"disabled-sorting\\\">{{purchasedTable.headerRow[5]}}</th>\\n                                        <th [hidden]=\\\"true\\\">{{purchasedTable.headerRow[6]}}</th>\\n                                        <th>{{ purchasedTable.headerRow[7] }}</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let row of purchasedTable.dataRows; let i=index;\\\">\\n                                        <td>{{row[0]}}</td>\\n                                        <td>{{row[1]}}</td>\\n                                        <td>{{row[2]}}</td>\\n                                        <td>{{row[3]}}</td>\\n                                        <td>{{row[4]}}</td>\\n                                        <td>\\n                                            <a [routerLink]=\\\"['/tables/purchasedPodcast/'+row[6]]\\\" class=\\\"btn btn-link btn-warning btn-just-icon\\\"\\n                                                style=\\\"color:rgb(171, 71, 188)\\\"><i class=\\\"material-icons\\\" style=\\\"font-size:18px\\\">remove_red_eye</i></a>\\n                                        </td>\\n                                        <td [hidden]=\\\"true\\\">{{row[6]}}</td>\\n                                        <td><a href=\\\"#\\\" class=\\\"btn btn-link btn-danger btn-just-icon remove\\\"><i class=\\\"material-icons\\\">close</i></a></td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <!-- end content-->\\n                </div>\\n                <!--  end card  -->\\n            </div>\\n            <!-- end col-md-12 -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n</div>\\n<ngx-spinner bdColor = \\\"rgba(51, 51, 51, 0.8)\\\" size = \\\"large\\\" color = \\\"#fff\\\" type = \\\"square-jelly-box\\\" ></ngx-spinner>\"","// IMPORTANT: this is a plugin which requires jQuery for initialisation and data manipulation\n\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Http, Headers } from '@angular/http';\nimport swal from 'sweetalert2';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Global } from '../../global';\n\ndeclare interface PurchasedPodcastTable {\n  headerRow: string[];\n  dataRows: string[][];\n}\n\ndeclare const $: any;\n\n@Component({\n    selector: 'app-purchased-podcast-cmp',\n    templateUrl: 'purchasedPodcast.component.html'\n})\n\nexport class PurchasedPodcastTableComponent implements OnInit, AfterViewInit {\n    public purchasedTable: PurchasedPodcastTable;\n    constructor(private http: Http, private router: Router,private spinner:NgxSpinnerService) { }\n\n    ngOnInit() {\n      this.spinner.show();\n      \n\n      let headers = new Headers();\n      headers.append(\"token\", localStorage.getItem(\"token\"));\n      headers.append(\"emailAddress\", localStorage.getItem(\"emailAddress\"));\n  \n      this.http.get(Global.API_ENDPOINT+'/getPurchasedPodcastList', { headers: headers }).subscribe((data) => {\n        console.log(\"Purchased Podcast list\")\n        console.log(data);\n        this.purchasedTable = {\n          headerRow: ['Title', 'Artist', 'Date', 'Tag', 'Paid', 'View', 'id','Actions'],\n          dataRows: data.json().data\n        }\n        //this.purchasedTable.dataRows = ;       \n        this.spinner.hide();\n      }, (err) => { \n        var body = JSON.parse(err.text())\n        this.spinner.hide();\n        swal({\n          title: body.status,\n          text: \"\",\n          timer: 3000,\n          showConfirmButton: false\n        }).catch(swal.noop);\n      })\n    }\n\n    ngAfterViewInit() {\n      $('#purchasedTableId').DataTable({\n        \"pagingType\": \"full_numbers\",\n        \"lengthMenu\": [\n          [10, 25, 50, -1],\n          [10, 25, 50, \"All\"]\n        ],\n        responsive: true,\n        language: {\n          search: \"_INPUT_\",\n          searchPlaceholder: \"Search records\",\n        }\n\n      });\n\n      const table = $('#purchasedTableId').DataTable();\n\n      // Delete a record\n      table.on('click', '.remove', function(e) {\n        const $tr = $(this).closest('tr');\n        table.row($tr).remove().draw();\n        e.preventDefault();\n      });\n\n      $('.card .material-datatables label').addClass('form-group');\n    }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MaterialModule } from '../app.module';\n\nimport { TablesRoutes } from './tables.routing';\nimport { TagInputModule } from 'ngx-chips';\nimport { DataTableComponent } from './latestPodcast/datatable.component';\nimport { UserPublishedTableComponent } from './userPublishedTable/userPublishedTable.component';\nimport { PurchasedPodcastTableComponent } from './purchasedPodcast/purchasedPodcast.component';\nimport { PodcastDetailComponent } from '../forms/podcastDetailforms/podcastDetailforms.component';\nimport { FileSelectDirective, FileDropDirective } from 'ng2-file-upload';\nimport { DetailForLatestAndPurchasedPodcastComponent } from '../forms/detailForLatestAndPurchasedPodcast/detailForLatestAndPurchasedPodcast.component'\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(TablesRoutes),\n    FormsModule,\n    TagInputModule,\n    MaterialModule,\n    NgxSpinnerModule\n  ],\n  declarations: [\n      DataTableComponent,\n      UserPublishedTableComponent,\n      PurchasedPodcastTableComponent,\n      PodcastDetailComponent,\n      FileSelectDirective,\n      FileDropDirective,\n      DetailForLatestAndPurchasedPodcastComponent\n  ]\n})\n\nexport class TablesModule {}","import { Routes } from '@angular/router';\n\nimport { DataTableComponent } from './latestPodcast/datatable.component';\nimport { UserPublishedTableComponent } from './userPublishedTable/userPublishedTable.component';\nimport { PurchasedPodcastTableComponent } from './purchasedPodcast/purchasedPodcast.component';\nimport { PodcastDetailComponent } from '../forms/podcastDetailforms/podcastDetailforms.component';\nimport { DetailForLatestAndPurchasedPodcastComponent } from '../forms/detailForLatestAndPurchasedPodcast/detailForLatestAndPurchasedPodcast.component';\n\nexport const TablesRoutes: Routes = [\n  {\n    path: '',\n    children: [{\n      path: 'latestPodcast',\n      component: DataTableComponent\n    },{\n      path: 'latestPodcast/:id',\n      component: DetailForLatestAndPurchasedPodcastComponent\n    }]\n  },\n  {\n    path: '',\n    children: [{\n      path: 'userPublishedTable',\n      component: UserPublishedTableComponent,\n    },\n    {\n      path: 'userPublishedTable/:id',\n      component: PodcastDetailComponent\n    }]\n  },\n  {\n    path: '',\n    children: [{\n      path: 'purchasedPodcast',\n      component: PurchasedPodcastTableComponent\n    },{\n      path: 'purchasedPodcast/:id',\n      component: DetailForLatestAndPurchasedPodcastComponent\n    }]\n  },\n];","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-primary card-header-icon\\\">\\n                        <div class=\\\"card-icon\\\">\\n                            <i class=\\\"material-icons\\\">assignment</i>\\n                        </div>\\n                        <h4 class=\\\"card-title\\\">User Published Podcast </h4>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"toolbar\\\">\\n                            <button mat-raised-button type=\\\"submit\\\" [routerLink]=\\\"['/tables/userPublishedTable', podcastId]\\\"\\n                                class=\\\"btn btn-sm btn-rose pull-right\\\">Add Podcast</button>\\n                            <!--        Here you can write extra buttons/actions for the toolbar              -->\\n                        </div>\\n                        <div class=\\\"material-datatables\\\">\\n                            <table id=\\\"publishedTableId\\\" class=\\\"table table-striped table-no-bordered table-hover\\\"\\n                                cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th>{{ userPublishedTableDataTable.headerRow[0] }}</th>\\n                                        <th>{{ userPublishedTableDataTable.headerRow[1] }}</th>\\n                                        <th>{{ userPublishedTableDataTable.headerRow[2] }}</th>\\n                                        <th>{{ userPublishedTableDataTable.headerRow[3] }}</th>\\n                                        <th>{{ userPublishedTableDataTable.headerRow[4] }}</th>\\n                                        <th class=\\\"disabled-sorting\\\">{{userPublishedTableDataTable.headerRow[5]}}</th>\\n                                        <th class=\\\"disabled-sorting\\\">{{userPublishedTableDataTable.headerRow[6]}}</th>\\n                                        <th [hidden]=\\\"true\\\">{{userPublishedTableDataTable.headerRow[7]}}</th>\\n                                        <th [hidden]=\\\"true\\\">{{userPublishedTableDataTable.headerRow[8]}}</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let row of userPublishedTableDataTable.dataRows; let i=index;\\\">\\n                                        <td>{{row[0]}}</td>\\n                                        <td>{{row[1]}}</td>\\n                                        <td>{{row[2]}}</td>\\n                                        <td>{{row[3]}}</td>\\n                                        <td>{{row[4]}}</td>\\n                                        <td>\\n                                            <a [routerLink]=\\\"['/tables/userPublishedTable/'+row[7]]\\\" class=\\\"btn btn-link btn-warning btn-just-icon\\\"\\n                                                style=\\\"color:rgb(171, 71, 188)\\\"><i class=\\\"material-icons\\\" style=\\\"font-size:18px\\\">remove_red_eye</i></a>\\n                                        </td>\\n                                        <td>\\n                                            <a href=\\\"#\\\" class=\\\"btn btn-link btn-danger btn-just-icon remove\\\"><i class=\\\"material-icons\\\">close</i></a>\\n                                        </td>\\n                                        <td [hidden]=\\\"true\\\">{{row[7]}}</td>\\n                                        <td [hidden]=\\\"true\\\">{{row[8]}}</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <!-- end content-->\\n                </div>\\n                <!--  end card  -->\\n            </div>\\n            <!-- end col-md-12 -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n</div>\\n<ngx-spinner bdColor = \\\"rgba(51, 51, 51, 0.8)\\\" size = \\\"large\\\" color = \\\"#fff\\\" type = \\\"square-jelly-box\\\" ></ngx-spinner>\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { UUID } from 'angular2-uuid';\nimport { Router } from '@angular/router';\nimport { Http, Headers } from '@angular/http';\nimport swal from 'sweetalert2';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Global } from '../../global';\n\ndeclare interface UserPublishedTable {\n  headerRow: string[];\n  dataRows: string[][];\n}\n\ndeclare const $: any;\n\n@Component({\n  selector: 'app-user-published-table-cmp',\n  templateUrl: 'userPublishedTable.component.html',\n})\n\nexport class UserPublishedTableComponent implements OnInit, AfterViewInit {\n  public userPublishedTableDataTable: UserPublishedTable;\n  podcastId = UUID.UUID();\n  public self = null;\n\n  constructor(private http: Http, private router: Router,private spinner:NgxSpinnerService) { }\n\n  ngOnInit() {\n    \n    this.spinner.show();\n    \n\n    this.self = this;\n    let headers = new Headers();\n    headers.append(\"token\", localStorage.getItem(\"token\"));\n    headers.append(\"emailAddress\", localStorage.getItem(\"emailAddress\"));\n \n    this.http.get(Global.API_ENDPOINT+'/getUserPublishedPodcast', { headers: headers }).subscribe((data) => {\n      this.userPublishedTableDataTable = {\n        headerRow: ['Title', 'Artist', 'Date', 'Tag', 'Paid', 'View', 'Actions','id', 'amount'],\n        dataRows: data.json().data\n      }\n    //this.userPublishedTableDataTable.dataRows = data.json().data;  \n    this.spinner.hide();\n    }, (err) => { \n      this.spinner.hide();\n      var body = JSON.parse(err.text());\n      swal({\n        title: body.status,\n        text: \"\",\n        timer: 3000,\n        showConfirmButton: false\n      }).catch(swal.noop);\n    })\n  }\n\n  ngAfterViewInit() {\n    $('#publishedTableId').DataTable({\n      \"pagingType\": \"full_numbers\",\n      \"lengthMenu\": [\n        [10, 25, 50, -1],\n        [10, 25, 50, \"All\"]\n      ],\n      responsive: true,\n      language: {\n        search: \"_INPUT_\",\n        searchPlaceholder: \"Search records\",\n      }\n    });\n\n    const table = $('#publishedTableId').DataTable();\n\n    // Delete a record\n    table.on('click', '.remove', function (e) {\n      const $tr = $(this).closest('tr');\n      table.row($tr).remove().draw();\n      e.preventDefault();\n    });\n\n    $('.card .material-datatables label').addClass('form-group');\n  }\n}"],"sourceRoot":""}